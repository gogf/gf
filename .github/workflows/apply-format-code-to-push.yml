name: Apply format code to Push

on:
  push:

jobs:
  format-code-golangci-lint:
    permissions:
      checks: write
      contents: read
      pull-requests: write
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.github_token }}
          golangci_lint_flags: "--timeout 3m  --config=.golangci.yml -v"
          level: "warning"
          reporter: github-pr-check
  format-code-staticcheck:
    permissions:
      checks: write
      contents: read
      pull-requests: write
    name: runner / staticcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
      - uses: reviewdog/action-staticcheck@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          filter_mode: nofilter
          fail_on_error: true         
  apply-format-code:
    strategy:
      matrix:
        go-version: [ 'stable' ]
    name: gci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
      - name: Setup Golang ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.github_token }}
          golangci_lint_flags: "--timeout 2m --config=.golangci.yml -v"
          level: "warning"
      - name: golint-gci
        uses: reviewdog/action-golangci-lint@v2
        with:
          golangci_lint_flags: "--disable-all -E gci"
          tool_name: gci # Change reporter name.
          level: warning          
      - name: Install gci
        run: go install github.com/daixiang0/gci@latest
      - name: Run gci
        run: |
          gci write --custom-order \
          --skip-generated \
          --skip-vendor \
          -s standard \
          -s blank \
          -s default \
          -s dot \
          -s "prefix(github.com/gogf/gf/v2)" \
          -s "prefix(github.com/gogf/gf/cmd)" \
          -s "prefix(github.com/gogf/gf/contrib)" \
          -s "prefix(github.com/gogf/gf/example)" \
          ./
      - name: Check for changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
          else
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
          fi         
      - name: Configure Git
        run: |
          if [[ "$HAS_CHANGES" == 'true' ]]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
          else
            echo "HAS_CHANGES= $HAS_CHANGES "
          fi
      - name: Commit and push changes
        run: |
          if [[ "$HAS_CHANGES" == 'true' ]]; then
            git add .
            git commit -m "Apply gci import order changes [skip ci]"
            git push origin ${{ github.event.pull_request.head.ref }}
          else
            echo "No change to commit push"
          fi
