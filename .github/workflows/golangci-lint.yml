# Copyright GoFrame Author(https://goframe.org). All Rights Reserved.
#
# This Source Code Form is subject to the terms of the MIT License.
# If a copy of the MIT was not distributed with this file,
# You can obtain one at https://github.com/gogf/gf.

name: GolangCI-Lint
on:
  push:
    branches:
      - master
      - develop
      - personal/**
      - feature/**
      - enhance/**
      - fix/**
      - feat/**

jobs:
  golangci:
    strategy:
      matrix:
        go-version: [ 'stable' ]
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Golang ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.62.2
          only-new-issues: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          args: --timeout 3m0s --fix
      - name: Install gci
        run: go install github.com/daixiang0/gci@latest
      - name: Run gci
        run: |
          gci write --custom-order \
          --skip-generated \
          --skip-vendor \
          -s standard \
          -s blank \
          -s default \
          -s dot \
          -s "prefix(github.com/gogf/gf/v2)" \
          -s "prefix(github.com/gogf/gf/cmd)" \
          -s "prefix(github.com/gogf/gf/contrib)" \
          -s "prefix(github.com/gogf/gf/example)" \
          ./
      - name: Check for changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
          echo "HAS_CHANGES=true" >> $GITHUB_ENV
          else
          echo "HAS_CHANGES=false" >> $GITHUB_ENV
          fi
      - name: Commit and push changes
        if: env.HAS_CHANGES == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Apply gci import order changes"
          git push